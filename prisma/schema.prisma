// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Customer {
  id                 String       @id @default(auto()) @map("_id") @db.ObjectId
  customerType       CustomerType
  firstName          String
  lastName           String
  phone              String       @unique
  country            String
  location           String
  maxCreditLimit     Float
  maxCreditDays      Int
  unpaidCreditAmount Int          @default(0)
  taxPin             String?
  dob                DateTime?
  email              String?      @unique
  NIN                String?      @unique
  sales              Sale[]
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
}

enum CustomerType {
  RETAIL
  WHOLESALE
  DISTRIBUTOR
  OTHER
}

model User {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  email            String    @unique
  username         String    @unique
  password         String
  firstName        String
  lastName         String
  phone            String    @unique
  dob              DateTime?
  image            String?
  role             Role      @default(ATTENDANT)
  resetToken       String? // Token used for password reset
  resetTokenExpiry DateTime? // Expiration time of the reset token

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // Fields for password reset
  shops     Shop[]
}

enum Role {
  ADMIN
  ATTENDANT
}

model Shop {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  slug         String    @unique
  location     String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  adminId      String    @db.ObjectId
  products     Product[]
  sales        Sale[]
  admin        User      @relation(fields: [adminId], references: [id])
  expenses     Expense[]
  attendantIds String[]  @db.ObjectId
}

model Supplier {
  id                 String       @id @default(auto()) @map("_id") @db.ObjectId
  supplierType       SupplierType
  name               String
  contactPerson      String
  phone              String       @unique
  email              String?      @unique
  location           String
  country            String
  website            String?
  taxPin             String?
  registrationNumber String?      @unique
  bankAccountNumber  String?
  bankName           String?
  paymentTerms       String?
  logo               String?      @default("https://cdn-icons-png.flaticon.com/128/10446/10446694.png")
  rating             Float?
  notes              String?
  product            Product[]
  purchaseOrders    PurchaseOrder[]
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt

}

enum SupplierType {
  MANUFACTURER
  DISTRIBUTOR
  WHOLESALER
  RETAILER
  OTHER
}

model Unit {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  abbreviation String
  slug         String    @unique
  products     Product[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Brand {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  slug      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  slug      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  description     String?
  batchNumber     String?
  barcode         String?          @unique
  image           String?          @default("https://cdn-icons-png.flaticon.com/128/10446/10446694.png")
  tax             Int?
  alertQty        Int
  stockQty        Int
  price           Int
  wholeSalePrice  Int              @default(0)
  buyingPrice     Int?
  sku             String           @unique
  productCode     String           @unique
  slug            String           @unique
  supplierId      String           @db.ObjectId
  unitId          String           @db.ObjectId
  shopId          String           @default("6741956bc0f984c5cea3df43") @db.ObjectId
  brandId         String           @db.ObjectId
  categoryId      String           @db.ObjectId
  expiryDate      DateTime
  shop            Shop             @relation(fields: [shopId], references: [id])
  unit            Unit             @relation(fields: [unitId], references: [id])
  brand           Brand            @relation(fields: [brandId], references: [id])
  category        Category         @relation(fields: [categoryId], references: [id])
  supplier        Supplier         @relation(fields: [supplierId], references: [id])
  saleItems       SaleItem[]
  adjustmentItems AdjustmentItem[]
  purchaseOrderItems PurchaseOrderItem[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

enum SaleType {
  PAID
  CREDIT
}

enum paymentMethod {
  CASH
  MOBILE_MONEY
}

model Sale {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  customerId      String        @db.ObjectId
  customerName    String
  saleNumber      String        @unique
  customerEmail   String?
  saleAmount      Int
  balanceAmount   Int?          @default(0)
  paidAmount      Int?
  saleType        SaleType      @default(PAID)
  paymentMethod   paymentMethod @default(CASH)
  transactionCode String?

  // Relationships
  shopId    String     @db.ObjectId
  shop      Shop       @relation(fields: [shopId], references: [id])
  saleItems SaleItem[]
  customer  Customer   @relation(fields: [customerId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SaleItem {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  saleId       String @db.ObjectId
  productId    String @db.ObjectId
  qty          Int
  productPrice Float
  productName  String
  productImage String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  product Product @relation(fields: [productId], references: [id])
  sale    Sale    @relation(fields: [saleId], references: [id])
}

model Payee {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  phone     String    @unique
  expenses  Expense[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model ExpenseCategory {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  slug      String    @unique
  expenses  Expense[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Expense {
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  amount      Int
  description String?
  attachments String[]
  expenseDate DateTime        @default(now())
  payeeId     String          @db.ObjectId
  categoryId  String          @db.ObjectId
  shopId      String          @db.ObjectId
  payee       Payee           @relation(fields: [payeeId], references: [id])
  category    ExpenseCategory @relation(fields: [categoryId], references: [id])
  shop        Shop            @relation(fields: [shopId], references: [id])
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

enum NotificationStatus {
  WARNING
  DANGER
  INFO
}

model Notification {
  id         String             @id @default(auto()) @map("_id") @db.ObjectId
  message    String
  status     NotificationStatus @default(WARNING)
  statusText String
  read       Boolean            @default(false)
  createdAt  DateTime           @default(now())
  updatedAt  DateTime           @updatedAt
}

model Adjustment {
  id     String           @id @default(auto()) @map("_id") @db.ObjectId
  refNo  String           @unique @default("AAAAB")
  reason String
  items  AdjustmentItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AdjustmentItem {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  adjustment   Adjustment @relation(fields: [adjustmentId], references: [id])
  adjustmentId String     @db.ObjectId
  productId    String     @db.ObjectId
  product      Product    @relation(fields: [productId], references: [id])
  quantity     Int
  type         String
  currentStock Int
  productName  String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

enum PurchaseOrderStatus {
  PAID
  PARTIAL
  UNPAID
}

model PurchaseOrder {
  id            String              @id @default(auto()) @map("_id") @db.ObjectId
  supplierId    String              @db.ObjectId
  supplier      Supplier            @relation(fields: [supplierId], references: [id])
  status        PurchaseOrderStatus @default(PAID)
  discount      Int?
  notes         String?
  tax           Int?
  refNo         String
  totalAmount   Int
  balanceAmount Int
  shippingCost  Int?
  items         PurchaseOrderItem[]
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt
}
model PurchaseOrderItem {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  purchaseOrder   PurchaseOrder  @relation(fields: [purchaseOrderId], references: [id])
  purchaseOrderId String         @db.ObjectId
  productId       String         @db.ObjectId
  product         Product        @relation(fields: [productId], references: [id])
  quantity        Int
  productName     String
  unitCost        Int
  subTotal        Int
  currentStock    Int
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}
